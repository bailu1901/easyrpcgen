using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CodeGenerator;
using Humanizer;


public static partial class  CSharpCodeGenerator
{
	public static void ClientInterface(TextWriter writer, string ClassName, string prefix, List<Function> Functions)
	{
		writer.WriteLine("// Generated by the rpc compiler.  DO NOT EDIT!");
		writer.WriteLine("using System;");
		writer.WriteLine("using System.Collections;");
		writer.WriteLine("using System.Collections.Generic;");
		writer.WriteLine("using Network;");
		writer.WriteLine("using ProtoBuf;");
		writer.WriteLine("using DataContract;");
		writer.WriteLine();
		writer.WriteLine("");
		writer.WriteLine("public partial interface " + ClassName);
		writer.WriteLine("{");
		foreach (Function current in Functions)
		{
			writer.Write(Utility.CreateCSharpComment("\t", current.Comment));

			var funcLine = string.Concat(new string[]
			{
				"\t",
				"void ",
				current.FunctionName,
				"(IConnection conn"
			});
			foreach (var argument in current.Args)
			{
				funcLine = string.Concat(funcLine, 
					", ",
					TypeDef.ConvertProtoType2CSType(argument.Type),
					" ",
					argument.Name.Pascalize());
			}
			funcLine += ");";
			writer.WriteLine(funcLine);
			
			writer.WriteLine();	
		}
		writer.WriteLine("}");
	}

}

